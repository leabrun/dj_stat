{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { init, viewport, isTMA } from '@telegram-apps/sdk';\nexport function useTelegramFullscreen() {\n  _s();\n  useEffect(() => {\n    async function initTg() {\n      if (await isTMA()) {\n        init();\n        if (viewport.mount.isAvailable()) {\n          await viewport.mount();\n          viewport.expand();\n        }\n        if (viewport.requestFullscreen.isAvailable()) {\n          await viewport.requestFullscreen();\n        }\n      }\n    }\n    initTg();\n  }, []);\n}\n_s(useTelegramFullscreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n;","map":{"version":3,"names":["useEffect","init","viewport","isTMA","useTelegramFullscreen","_s","initTg","mount","isAvailable","expand","requestFullscreen"],"sources":["/home/leabrun/python_/KWORK/dj/front/src/InitTelegram.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { init, viewport, isTMA } from '@telegram-apps/sdk';\n\nexport function useTelegramFullscreen() {\n    useEffect(() => {\n        async function initTg() {\n          if (await isTMA()) {\n            init();\n    \n            if (viewport.mount.isAvailable()) {\n              await viewport.mount();\n              viewport.expand();\n            }\n    \n            if (viewport.requestFullscreen.isAvailable()) {\n              await viewport.requestFullscreen();\n            }\n          }\n        }\n        initTg();\n    \n      }, []);\n    };"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,oBAAoB;AAE1D,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EACpCL,SAAS,CAAC,MAAM;IACZ,eAAeM,MAAMA,CAAA,EAAG;MACtB,IAAI,MAAMH,KAAK,CAAC,CAAC,EAAE;QACjBF,IAAI,CAAC,CAAC;QAEN,IAAIC,QAAQ,CAACK,KAAK,CAACC,WAAW,CAAC,CAAC,EAAE;UAChC,MAAMN,QAAQ,CAACK,KAAK,CAAC,CAAC;UACtBL,QAAQ,CAACO,MAAM,CAAC,CAAC;QACnB;QAEA,IAAIP,QAAQ,CAACQ,iBAAiB,CAACF,WAAW,CAAC,CAAC,EAAE;UAC5C,MAAMN,QAAQ,CAACQ,iBAAiB,CAAC,CAAC;QACpC;MACF;IACF;IACAJ,MAAM,CAAC,CAAC;EAEV,CAAC,EAAE,EAAE,CAAC;AACR;AAACD,EAAA,CAnBWD,qBAAqB;AAmBhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}