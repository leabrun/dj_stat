{"ast":null,"code":"var _jsxFileName = \"/home/leabrun/python_/KWORK/dj/front/src/DJConsoleContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DJConsoleContext = /*#__PURE__*/createContext();\n\n// Counter for reset events\nlet resetCounter = 0;\n\n// Provider component\nexport const DJConsoleProvider = ({\n  children\n}) => {\n  _s();\n  // State to trigger resets - incrementing this value triggers a reset\n  const [resetTrigger, setResetTrigger] = useState(0);\n  const [volume, setVolume] = useState(0.5);\n\n  // Function to reset all buttons\n  const resetAllButtons = () => {\n    // Increment the reset counter to trigger all listeners\n    resetCounter++;\n    setResetTrigger(resetCounter);\n  };\n\n  // The context value\n  const contextValue = {\n    resetTrigger,\n    resetAllButtons\n  };\n  return /*#__PURE__*/_jsxDEV(DJConsoleContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the DJ console context\n_s(DJConsoleProvider, \"NGvD6XwpywS3z8h3IYtYE4TRvWQ=\");\n_c = DJConsoleProvider;\nexport const useDJConsole = () => {\n  _s2();\n  const context = useContext(DJConsoleContext);\n  if (context === undefined) {\n    throw new Error('useDJConsole must be used within a DJConsoleProvider');\n  }\n  return context;\n};\n_s2(useDJConsole, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DJConsoleProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","DJConsoleContext","resetCounter","DJConsoleProvider","children","_s","resetTrigger","setResetTrigger","volume","setVolume","resetAllButtons","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDJConsole","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/home/leabrun/python_/KWORK/dj/front/src/DJConsoleContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nconst DJConsoleContext = createContext();\n\n// Counter for reset events\nlet resetCounter = 0;\n\n// Provider component\nexport const DJConsoleProvider = ({ children }) => {\n  // State to trigger resets - incrementing this value triggers a reset\n  const [resetTrigger, setResetTrigger] = useState(0);\n  const [volume, setVolume] = useState(0.5);\n\n  // Function to reset all buttons\n  const resetAllButtons = () => {\n    // Increment the reset counter to trigger all listeners\n    resetCounter++;\n    setResetTrigger(resetCounter);\n  };\n\n  // The context value\n  const contextValue = {\n    resetTrigger,\n    resetAllButtons\n  };\n\n  return (\n    <DJConsoleContext.Provider value={contextValue}>\n      {children}\n    </DJConsoleContext.Provider>\n  );\n};\n\n// Custom hook to use the DJ console context\nexport const useDJConsole = () => {\n  const context = useContext(DJConsoleContext);\n  if (context === undefined) {\n    throw new Error('useDJConsole must be used within a DJConsoleProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;;AAExC;AACA,IAAIM,YAAY,GAAG,CAAC;;AAEpB;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;;EAEzC;EACA,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAR,YAAY,EAAE;IACdK,eAAe,CAACL,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMS,YAAY,GAAG;IACnBL,YAAY;IACZI;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,gBAAgB,CAACW,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAP,QAAA,EAC5CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;;AAED;AAAAZ,EAAA,CAzBaF,iBAAiB;AAAAe,EAAA,GAAjBf,iBAAiB;AA0B9B,OAAO,MAAMgB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAMC,OAAO,GAAGvB,UAAU,CAACG,gBAAgB,CAAC;EAC5C,IAAIoB,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,YAAY;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}