{"ast":null,"code":"var _jsxFileName = \"/home/leabrun/python_/KWORK/dj/front/src/components/MelodyButton.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MelodyButton.css';\nimport useSound from '../useSound';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MelodyButtonGroup = () => {\n  _s();\n  const [activeButton, setActiveButton] = useState(null);\n  const buttons = [{\n    id: 'mldbtn1',\n    soundUrl: '/sounds/melodies/1.wav'\n  }, {\n    id: 'mldbtn2',\n    soundUrl: '/sounds/melodies/2.wav'\n  }, {\n    id: 'mldbtn3',\n    soundUrl: '/sounds/melodies/3.wav'\n  }];\n  const handleButtonClick = buttonId => {\n    if (activeSound === soundId) {\n      setActiveSound(null);\n    } else {\n      setActiveSound(soundId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"melody-row\",\n    children: buttons.map(button => /*#__PURE__*/_jsxDEV(MelodyButton, {\n      isActive: activeButton === button.id,\n      onClick: () => handleButtonClick(button.id),\n      soundUrl: buttons.soundUrl\n    }, button.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(MelodyButtonGroup, \"2IlxFF4hDMq20XkKpqpiCEEIzsY=\");\n_c = MelodyButtonGroup;\nconst MelodyButton = ({\n  key,\n  isActive,\n  soundUrl,\n  onClick\n}) => {\n  _s2();\n  const pic = /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"12\",\n    height: \"15\",\n    viewBox: \"0 0 12 15\",\n    fill: \"none\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M6.55143 9.16416H3.43021C3.09863 9.16343 2.77042 9.23052 2.46587 9.36128C2.16132 9.49204 1.88691 9.68369 1.65958 9.92439C1.43225 10.1651 1.25685 10.4497 1.14421 10.7607C1.03157 11.0717 0.98408 11.4024 1.00469 11.7323C1.02529 12.0623 1.11356 12.3846 1.26402 12.6792C1.41447 12.9739 1.62394 13.2346 1.87945 13.4453C2.13497 13.656 2.43111 13.8123 2.74958 13.9043C3.06804 13.9964 3.40206 14.0224 3.73099 13.9807L4.1467 13.9286C4.8103 13.8456 5.42072 13.524 5.86345 13.0242C6.30619 12.5243 6.55081 11.8806 6.55143 11.2137V4.24496C6.55143 3.04009 6.55143 2.43803 6.90519 2.02202C7.25896 1.60601 7.85454 1.50629 9.04571 1.30758L10.8056 1.01511C10.9071 0.998738 10.9578 0.989807 10.9847 1.01958C11.0116 1.04934 10.9996 1.09846 10.975 1.19818L10.307 3.86318C10.2958 3.90784 10.2899 3.93016 10.2742 3.94505C10.2585 3.95993 10.2369 3.9644 10.1914 3.97333L6.55143 4.69893\",\n      stroke: \"#0000FF\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n  const {\n    play,\n    stop\n  } = useSound(soundUrl);\n  useEffect(() => {\n    if (isActive) {\n      console.log(`${isActive}`);\n      play();\n    } else {\n      console.log(`${isActive}`);\n      stop();\n    }\n  }, [isActive, play, stop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `custom-melody-button ${isActive ? 'pressed' : ''}`,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-melody-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"melody-button\",\n      children: [pic, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"melody-text\",\n        children: \"\\u041C\\u0435\\u043B\\u043E\\u0434\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s2(MelodyButton, \"rfKg7IfvTc5ywRdaCzmS7oEUMkI=\", false, function () {\n  return [useSound];\n});\n_c2 = MelodyButton;\nexport default MelodyButtonGroup;\nvar _c, _c2;\n$RefreshReg$(_c, \"MelodyButtonGroup\");\n$RefreshReg$(_c2, \"MelodyButton\");","map":{"version":3,"names":["React","useState","useSound","useEffect","jsxDEV","_jsxDEV","MelodyButtonGroup","_s","activeButton","setActiveButton","buttons","id","soundUrl","handleButtonClick","buttonId","activeSound","soundId","setActiveSound","className","children","map","button","MelodyButton","isActive","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","key","_s2","pic","width","height","viewBox","fill","d","stroke","strokeWidth","play","stop","console","log","_c2","$RefreshReg$"],"sources":["/home/leabrun/python_/KWORK/dj/front/src/components/MelodyButton.jsx"],"sourcesContent":["import React, { useState }  from 'react';\nimport './MelodyButton.css';\nimport useSound from '../useSound';\nimport { useEffect } from 'react';\n\n\nconst MelodyButtonGroup = () => {\n    const [activeButton, setActiveButton] = useState(null);\n  \n    const buttons = [\n      { id: 'mldbtn1', soundUrl: '/sounds/melodies/1.wav' },\n      { id: 'mldbtn2', soundUrl: '/sounds/melodies/2.wav' },\n      { id: 'mldbtn3', soundUrl: '/sounds/melodies/3.wav' }\n    ];\n  \n    const handleButtonClick = (buttonId) => {\n        if (activeSound === soundId) {\n          setActiveSound(null);\n        } else {\n          setActiveSound(soundId);\n        }\n      };\n  \n    return (\n      <div className=\"melody-row\">\n        {buttons.map((button) => (\n          <MelodyButton\n            key={button.id}\n            isActive={activeButton === button.id}\n            onClick={() => handleButtonClick(button.id)}\n            soundUrl={buttons.soundUrl}\n        />\n    ))}\n    </div>\n  );\n};\n\n\nconst MelodyButton = ({ key, isActive, soundUrl, onClick }) => {\n  const pic = (\n        <svg \n            width=\"12\" \n            height=\"15\" \n            viewBox=\"0 0 12 15\" \n            fill=\"none\"\n        >\n            <path \n                d=\"M6.55143 9.16416H3.43021C3.09863 9.16343 2.77042 9.23052 2.46587 9.36128C2.16132 9.49204 1.88691 9.68369 1.65958 9.92439C1.43225 10.1651 1.25685 10.4497 1.14421 10.7607C1.03157 11.0717 0.98408 11.4024 1.00469 11.7323C1.02529 12.0623 1.11356 12.3846 1.26402 12.6792C1.41447 12.9739 1.62394 13.2346 1.87945 13.4453C2.13497 13.656 2.43111 13.8123 2.74958 13.9043C3.06804 13.9964 3.40206 14.0224 3.73099 13.9807L4.1467 13.9286C4.8103 13.8456 5.42072 13.524 5.86345 13.0242C6.30619 12.5243 6.55081 11.8806 6.55143 11.2137V4.24496C6.55143 3.04009 6.55143 2.43803 6.90519 2.02202C7.25896 1.60601 7.85454 1.50629 9.04571 1.30758L10.8056 1.01511C10.9071 0.998738 10.9578 0.989807 10.9847 1.01958C11.0116 1.04934 10.9996 1.09846 10.975 1.19818L10.307 3.86318C10.2958 3.90784 10.2899 3.93016 10.2742 3.94505C10.2585 3.95993 10.2369 3.9644 10.1914 3.97333L6.55143 4.69893\"\n                stroke=\"#0000FF\"\n                strokeWidth=\"2\"\n            />\n        </svg>\n    )\n  \n  const { play, stop } = useSound(soundUrl);\n\n  useEffect(() => {\n    if (isActive) {\n      console.log(`${isActive}`)\n      play();\n    } else {\n      console.log(`${isActive}`)  \n      stop();\n    }\n  }, [isActive, play, stop]);\n\n    return (\n        <div \n            className={`custom-melody-button ${isActive ? 'pressed' : ''}`}\n            onClick={onClick}\n        >\n            <div className=\"back-melody-button\"></div>\n            <button className='melody-button'>            \n                {pic}\n                <span className='melody-text'>Мелодия</span>        \n            </button>\n        </div>\n    );\n};\n\nexport default MelodyButtonGroup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}