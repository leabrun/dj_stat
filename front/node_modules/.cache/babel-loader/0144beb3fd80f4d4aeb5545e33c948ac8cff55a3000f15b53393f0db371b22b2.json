{"ast":null,"code":"var _jsxFileName = \"/home/leabrun/python_/KWORK/dj/front/src/components/MelodyButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MelodyButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MelodyButton = () => {\n  _s();\n  const [isPressed, setIsPressed] = useState(false);\n  const handleMouseDown = () => {\n    setIsPressed(true);\n  };\n  const handleMouseUp = () => {\n    setIsPressed(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `melody-button ${isPressed ? 'pressed' : ''}`,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: () => setIsPressed(false),\n    children: \"\\u041C\\u0435\\u043B\\u043E\\u0434\\u0438\\u044F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(MelodyButton, \"xbZH3DzXyTYDyv25dIidXDvNjLA=\");\n_c = MelodyButton;\nexport default MelodyButton;\nvar _c;\n$RefreshReg$(_c, \"MelodyButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MelodyButton","_s","isPressed","setIsPressed","handleMouseDown","handleMouseUp","className","onMouseDown","onMouseUp","onMouseLeave","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/leabrun/python_/KWORK/dj/front/src/components/MelodyButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './MelodyButton.css';\n\nconst MelodyButton = () => {\n    const [isPressed, setIsPressed] = useState(false);\n    const handleMouseDown = () => {\n        setIsPressed(true);\n    };\n    const handleMouseUp = () => {\n        setIsPressed(false);\n    };\n\n    return (\n        <button\n            className={`melody-button ${isPressed ? 'pressed' : ''}`}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onMouseLeave={() => setIsPressed(false)}\n        >\n            Мелодия\n        </button>\n    );\n};\n\nexport default MelodyButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC1BD,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxBF,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIJ,OAAA;IACIO,SAAS,EAAE,iBAAiBJ,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IACzDK,WAAW,EAAEH,eAAgB;IAC7BI,SAAS,EAAEH,aAAc;IACzBI,YAAY,EAAEA,CAAA,KAAMN,YAAY,CAAC,KAAK,CAAE;IAAAO,QAAA,EAC3C;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB,CAAC;AAACb,EAAA,CAnBID,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}