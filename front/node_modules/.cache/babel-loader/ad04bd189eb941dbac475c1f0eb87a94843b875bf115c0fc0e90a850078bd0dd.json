{"ast":null,"code":"function i() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction c() {\n  const t = i();\n  return !!t && t.type === \"reload\";\n}\nfunction o(t, n) {\n  return t.startsWith(n) ? t : `${n}${t}`;\n}\nfunction R(t) {\n  return new URL(typeof t == \"string\" ? t : [t.pathname || \"\", o(t.search || \"\", \"?\"), o(t.hash || \"\", \"#\")].join(\"\"), \"http://a\");\n}\nfunction a(t) {\n  const n = (typeof t == \"string\" ? t : t.pathname || \"\").startsWith(\"/\"),\n    e = R(t),\n    {\n      pathname: s\n    } = e;\n  return `${n ? s : s.slice(1)}${e.search}${e.hash}`;\n}\nconst r = \"ERR_NAVIGATION_HISTORY_EMPTY\",\n  I = \"ERR_NAVIGATION_CURSOR_INVALID\";\nexport { I as ERR_CURSOR_INVALID, r as ERR_HISTORY_EMPTY, R as createSafeURL, o as ensurePrefix, i as getFirstNavigationEntry, c as isPageReload, a as urlToPath };","map":{"version":3,"names":["i","performance","getEntriesByType","c","t","type","o","n","startsWith","R","URL","pathname","search","hash","join","a","e","s","slice","r","I"],"sources":["/home/leabrun/python_/KWORK/dj/front/node_modules/@telegram-apps/navigation/src/history/getFirstNavigationEntry.ts","/home/leabrun/python_/KWORK/dj/front/node_modules/@telegram-apps/navigation/src/history/isPageReload.ts","/home/leabrun/python_/KWORK/dj/front/node_modules/@telegram-apps/navigation/src/ensurePrefix.ts","/home/leabrun/python_/KWORK/dj/front/node_modules/@telegram-apps/navigation/src/url/createSafeURL.ts","/home/leabrun/python_/KWORK/dj/front/node_modules/@telegram-apps/navigation/src/url/urlToPath.ts","/home/leabrun/python_/KWORK/dj/front/node_modules/@telegram-apps/navigation/src/errors.ts"],"sourcesContent":["/**\n * Returns the first navigation entry from window.performance.\n * @returns First navigation entry or null, in case performance functionality is not supported\n * or navigation entry was not found.\n */\nexport function getFirstNavigationEntry(): PerformanceNavigationTiming | undefined {\n  return performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming | undefined;\n}\n","import { getFirstNavigationEntry } from './getFirstNavigationEntry.js';\n\n/**\n * @returns True, if the current page was reloaded.\n * @see https://stackoverflow.com/a/36444134/11894710\n */\nexport function isPageReload(): boolean {\n  const entry = getFirstNavigationEntry();\n  return !!entry && entry.type === 'reload';\n}\n","/**\n * Ensures that the specified value starts with the specified prefix. If it doesn't, function\n * appends it.\n * @param value - value to check.\n * @param prefix - prefix to add.\n * @returns Value with the prefix.\n */\nexport function ensurePrefix(value: string, prefix: string): string {\n  return value.startsWith(prefix) ? value : `${prefix}${value}`;\n}\n","import { ensurePrefix } from '@/ensurePrefix.js';\n\nimport type { URLLike } from './types.js';\n\n/**\n * Safely creates a new instance of URL with some predefined protocol \"http://\" and host \"a\".\n * @param urlOrPath - URL instance or path.\n */\nexport function createSafeURL(urlOrPath: string | Partial<URLLike>): URL {\n  return new URL(\n    typeof urlOrPath === 'string' ? urlOrPath : [\n      urlOrPath.pathname || '',\n      ensurePrefix(urlOrPath.search || '', '?'),\n      ensurePrefix(urlOrPath.hash || '', '#'),\n    ].join(''),\n    'http://a',\n  );\n}\n","import { createSafeURL } from './createSafeURL.js';\nimport type { URLLike } from './types.js';\n\n/**\n * Extracts path part from a URL.\n * @param urlOrPath - URL instance or path.\n */\nexport function urlToPath(urlOrPath: string | Partial<URLLike>): string {\n  const isAbsolute = (\n    typeof urlOrPath === 'string'\n      ? urlOrPath\n      : urlOrPath.pathname || ''\n  ).startsWith('/');\n  const url = createSafeURL(urlOrPath);\n  const { pathname } = url;\n\n  return `${isAbsolute ? pathname : pathname.slice(1)}${url.search}${url.hash}`;\n}\n","export const ERR_HISTORY_EMPTY = 'ERR_NAVIGATION_HISTORY_EMPTY';\nexport const ERR_CURSOR_INVALID = 'ERR_NAVIGATION_CURSOR_INVALID';"],"mappings":"AAKO,SAASA,EAAA,EAAmE;EACjF,OAAOC,WAAA,CAAYC,gBAAA,CAAiB,YAAY,EAAE,CAAC;AACrD;ACDO,SAASC,EAAA,EAAwB;EACtC,MAAMC,CAAA,GAAQJ,CAAA;EACd,OAAO,CAAC,CAACI,CAAA,IAASA,CAAA,CAAMC,IAAA,KAAS;AACnC;ACFgB,SAAAC,EAAaF,CAAA,EAAeG,CAAA,EAAwB;EAC3D,OAAAH,CAAA,CAAMI,UAAA,CAAWD,CAAM,IAAIH,CAAA,GAAQ,GAAGG,CAAM,GAAGH,CAAK;AAC7D;ACDO,SAASK,EAAcL,CAAA,EAA2C;EACvE,OAAO,IAAIM,GAAA,CACT,OAAON,CAAA,IAAc,WAAWA,CAAA,GAAY,CAC1CA,CAAA,CAAUO,QAAA,IAAY,IACtBL,CAAA,CAAaF,CAAA,CAAUQ,MAAA,IAAU,IAAI,GAAG,GACxCN,CAAA,CAAaF,CAAA,CAAUS,IAAA,IAAQ,IAAI,GAAG,GACtCC,IAAA,CAAK,EAAE,GACT;AAEJ;ACVO,SAASC,EAAUX,CAAA,EAA8C;EAChE,MAAAG,CAAA,IACJ,OAAOH,CAAA,IAAc,WACjBA,CAAA,GACAA,CAAA,CAAUO,QAAA,IAAY,IAC1BH,UAAA,CAAW,GAAG;IACVQ,CAAA,GAAMP,CAAA,CAAcL,CAAS;IAC7B;MAAEO,QAAA,EAAAM;IAAa,IAAAD,CAAA;EAErB,OAAO,GAAGT,CAAA,GAAaU,CAAA,GAAWA,CAAA,CAASC,KAAA,CAAM,CAAC,CAAC,GAAGF,CAAA,CAAIJ,MAAM,GAAGI,CAAA,CAAIH,IAAI;AAC7E;ACjBO,MAAMM,CAAA,GAAoB;EACpBC,CAAA,GAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}